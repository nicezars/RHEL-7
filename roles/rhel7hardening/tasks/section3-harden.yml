---
#
# Copyright 2020
# This section contains 22 rules
#
#####
  - name: " 3.1.1 | HARDEN | Disable IPv6"
    block:
    - shell: |
        grep "^\s*linux" /boot/grub2/grub.cfg | grep -v 'ipv6.disable'
      register: rhel7cis_rule_3_1_1_a_rc
      ignore_errors: yes
    - shell: |
         grep "^\s*linux" /boot/grub2/grub.cfg | grep 'ipv6.disable=0'
      register: rhel7cis_rule_3_1_1_b_rc
      ignore_errors: yes
    - name: " 3.1.1 | HARDEN | Disable IPv6"
      block:
      - name: " 3.1.1 | HARDEN | Disable IPv6 - before"
        slurp:
          src:  /etc/default/grub
        ignore_errors: yes
        register: before
      - name: "3.1.1  | HARDEN | Disable IPv6 - modify"
        lineinfile:
          path: /etc/default/grub
          regexp: '^(GRUB_CMDLINE_LINUX=.*(?!.*ipv6\.disable=1)\"[^\"]+)(\".*)'
          line: '\1 ipv6.disable=1\2'
          backrefs: yes
        register: result_conf
        ignore_errors: yes
        diff: yes
        when: rhel7cis_rule_3_1_1_a_rc.rc == 0
      - replace:
          path: /etc/default/grub
          regexp: 'ipv6.disable=0'
          replace: "ipv6.disable=1"
        register: result_conf
        ignore_errors: yes
        diff: yes
        when: rhel7cis_rule_3_1_1_b_rc.rc == 0
      - shell:  grub2-mkconfig -o /boot/grub2/grub.cfg
        register: result_update
        ignore_errors: yes
      - name: "3.1.1 - Setup result variable"
        set_fact:
          result_3_1_1: "{{ result_3_1_1|default([]) + [item] }}"
        loop:
        - "{{ result_conf }}"
        - "{{ result_update }}"
      - set_fact:
          all_results: "{{ all_results|combine({'3.1.1':{'result':result_3_1_1|default({}),'audits':before|default({})}}) }}"
      when: ipv6_disable_through_grub2 == true

    - name: " 3.1.1 | HARDEN | Disable IPv6"
      block:
      - name: "3.1.1  | HARDEN | Disable IPv6 - before"
        slurp:
          src:  /etc/sysctl.conf
        ignore_errors: yes
        register: before_sysctl
      - slurp:
          src:  /etc/ssh/sshd_config
        ignore_errors: yes
        register: before_sshd
      - name: "3.1.1  | HARDEN | Disable IPv6 - modify"
        sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
        with_items:
        - { name: net.ipv6.conf.all.disable_ipv6, value: 1 }
        - { name: net.ipv6.conf.default.disable_ipv6, value: 1 }
        register: result_disable_ipv6
        ignore_errors: yes
      - lineinfile:
          dest: /etc/ssh/sshd_config
          regexp: '^AddressFamily'
          line: 'AddressFamily inet'
        register: result_ssh_x11forwarding
        ignore_errors: yes
      - systemd:
          state: restarted
          name: sshd
        register: result_restart
        ignore_errors: yes
      - name: "3.1.1 - Setup result variable"
        set_fact:
          result_3_1_1: "{{ result_3_1_1|default([]) + [item] }}"
        loop:
        - "{{ result_disable_ipv6 }}"
        - "{{ result_ssh_x11forwarding }}"
        - "{{ result_restart }}"
      - name: "3.1.1 - Setup audit variable"
        set_fact:
          before_3_1_1: "{{ before_3_1_1|default([]) + [item] }}"
        loop:
        - "{{ before_sysctl }}"
        - "{{ before_sshd }}"
      - set_fact:
          all_results: "{{ all_results|combine({'3.1.1':{'result':result_3_1_1|default({}),'audits':before_3_1_1|default({})}}) }}"
      when: ipv6_disable_through_sysctl == true

    when: rhel7cis_rule_3_1_1 and rhel7cis_rule_3_1_1_ipv6_disable == true
    tags:
     - level2
     - harden
     - rule_3.1.1
     - rhel7

#####
  - name: " 3.1.2 | HARDEN | Ensure wireless interfaces are disabled"
    block:
      - name: " 3.1.2 | HARDEN | Ensure wireless interfaces are disabled"
        shell:   "nmcli device status |grep -e 'wifi * connected'|awk '{print $1}'"
        register: before_3_1_2
        ignore_errors: yes
      - shell:  ip link set {{ item }} down
        with_items: "{{ before.stdout_lines | default([]) }}"
        register: result_3_1_2
        ignore_errors: yes
      - set_fact:
          all_results: "{{ all_results|combine({'3.1.2':{'result':result_3_1_2|default({}),'audits':before_3_1_2|default({})}}) }}"
    when: rhel7cis_rule_3_1_2_wired == true and rhel7cis_rule_3_1_2
    tags:
     - level1
     - harden
     - rule_3.1.2
     - rhel7

#####
  - name: " 3.2.1 | HARDEN | Ensure IP forwarding is disabled"
    block:
    - name: " 3.2.1 | HARDEN | Ensure IP forwarding is disabled - before"
      slurp:
        src: /etc/sysctl.conf
      ignore_errors: yes
      register: before_conf
    - shell: ls /etc/sysctl.d/*.conf
      ignore_errors: yes
      register: d_conf_1
    - slurp:
        src: "{{ item }}"
      ignore_errors: yes
      register: before_d_conf_1
      with_items:
        - "{{ d_conf.stdout_lines | default([]) }}"

    - name: " 3.2.1 | HARDEN | Ensure IP forwarding is disabled - modify ipv4"
      sysctl:
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        sysctl_set: yes
        state: present
        reload: yes
      ignore_errors: yes
      with_items:
        - { name: net.ipv4.ip_forward, value: 0 }
      register: result_ipv4
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.2.1 - Setup audit variable"
      set_fact:
        before_3_2_1: "{{ before_3_2_1|default([]) + [item] }}"
      loop:
        - "{{ before_conf }}"
        - "{{ before_d_conf_1 }}"
    - name: "3.1.1 - Setup result variable"
      set_fact:
        result_3_2_1: "{{ result_3_2_1|default([]) + [item] }}"
      loop:
        - "{{ result_ipv4 }}"
        - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.2.1':{'result':result_3_2_1|default({}),'audits':before_3_2_1|default({})}}) }}"
      ignore_errors: yes
    when: rhel7cis_rule_3_2_1
    tags:
     - level1
     - harden
     - rule_3.2.1
     - rhel7


#####
  - name: " 3.2.2 | HARDEN | Ensure packet redirect sending is disabled "
    block:
    - name: "3.2.2  | HARDEN | Ensure packet redirect sending is disabled - before"
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_2_2
    - name: " 3.2.2 | HARDEN | Ensure packet redirect sending is disabled "
      sysctl:
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
        - { name: net.ipv4.conf.all.send_redirects, value: 0 }
        - { name: net.ipv4.conf.default.send_redirects, value: 0 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.2.2 - Setup result variable"
      set_fact:
        result_3_2_2: "{{ result_3_2_2|default([]) + [item] }}"
      loop:
        - "{{ result_sysctl }}"
        - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.2.2':{'result':result_3_2_2|default({}),'audits':before_3_2_2|default({})}}) }}"
    when: rhel7cis_rule_3_2_2 and rhel7cis_is_router == false
    tags:
     - level1
     - harden
     - rule_3.2.2
     - rhel7

#####
  - name: " 3.3.1 | HARDEN | Ensure source routed packets are not accepted "
    block:
    - name: " 3.3.1 | HARDEN | Ensure source routed packets are not accepted "
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_1
    - name: " 3.3.1 | HARDEN | Ensure source routed packets are not accepted "
      sysctl:
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
          - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
          - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.1 - Setup result variable"
      set_fact:
        result_3_3_1: "{{ result_3_3_1|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.1':{'result':result_3_3_1|default({}),'audits':before_3_3_1|default({})}}) }}"
    when: rhel7cis_rule_3_3_1
    tags:
     - level1
     - harden
     - rule_3.3.1
     - rhel7

  - name: " 3.3.1 | HARDEN_IPv6 | Ensure source routed packets are not accepted"
    block:
    - name: "3.3.1 | HARDEN_IPv6_ENABLED | Ensure source routed packets are not accepted"
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_1
    - name: " 3.3.1 | HARDEN_IPv6_ENABLED | Ensure source routed packets are not accepted "
      sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
      with_items:
          - { name: net.ipv6.conf.all.accept_source_route, value: 0 }
          - { name: net.ipv6.conf.default.accept_source_route, value: 0 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv6.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.1 - Setup result variable"
      set_fact:
        result_3_3_1: "{{ result_3_3_1|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.1':{'result':result_3_3_1|default({}),'audits':before_3_3_1|default({})}}) }}"
    when: rhel7cis_rule_3_3_1 and rhel7cis_rule_3_1_1_ipv6_disable == false
    tags:
     - level1
     - harden
     - rule_3.3.1
     - rhel7

#####
  - name: " 3.3.2 | HARDEN | Ensure ICMP redirects are not accepted"
    block:
    - name: " 3.3.2 | HARDEN | Ensure ICMP redirects are not accepted"
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_2
    - name: " 3.3.2 | HARDEN | Ensure ICMP redirects are not accepted "
      sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
      with_items:
          - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
          - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.2 - Setup result variable"
      set_fact:
        result_3_3_2: "{{ result_3_3_2|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.2':{'result':result_3_3_2|default({}),'audits':before_3_3_2|default({})}}) }}"
    when: rhel7cis_rule_3_3_2
    tags:
     - level1
     - harden
     - rule_3.3.2
     - rhel7

  - name: " 3.3.2 | HARDEN_IPv6 | Ensure source routed packets are not accepted"
    block:
    - name: "3.3.2 | HARDEN_IPv6_DISABLED | Ensure source routed packets are not accepted"
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_2
    - name: " 3.3.2 | HARDEN_IPv6_ENABLED | Ensure source routed packets are not accepted "
      sysctl:
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
          - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
          - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv6.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.2 - Setup result variable"
      set_fact:
        result_3_3_2: "{{ result_3_3_2|default([]) + [item] }}"
      loop:
        - "{{ result_sysctl }}"
        - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.2':{'result':result_3_3_2|default({}),'audits':before_3_3_2|default({})}}) }}"
    when: rhel7cis_rule_3_3_2 and rhel7cis_rule_3_1_1_ipv6_disable == false
    tags:
     - level1
     - harden
     - rule_3.3.2
     - rhel7

#####
  - name: " 3.3.3 | HARDEN | Ensure packet redirect sending is disabled "
    block:
    - name: " 3.3.3 | HARDEN | Ensure packet redirect sending is disabled "
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_3
    - name: " 3.3.3 | HARDEN | Ensure packet redirect sending is disabled - modify "
      sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
      with_items:
          - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
          - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.3 - Setup result variable"
      set_fact:
        result_3_3_3: "{{ result_3_3_3|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.3':{'result':result_3_3_3|default({}),'audits':before_3_3_3|default({})}}) }}"
    when: rhel7cis_rule_3_3_3
    tags:
     - level1
     - harden
     - rule_3.3.3
     - rhel7

#####
  - name: " 3.3.4 | HARDEN | Ensure suspicious packets are logged "
    block:
    - name: " 3.3.4 | HARDEN | Ensure suspicious packets are logged "
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_4
    - name: " 3.3.4 | HARDEN | Ensure suspicious packets are logged - modify "
      sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
      with_items:
          - { name: net.ipv4.conf.all.log_martians, value: 1 }
          - { name: net.ipv4.conf.default.log_martians, value: 1 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.4 - Setup result variable"
      set_fact:
        result_3_3_4: "{{ result_3_3_4|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.4':{'result':result_3_3_4|default({}),'audits':before_3_3_4|default({})}}) }}"
    when: rhel7cis_rule_3_3_4
    tags:
     - level1
     - harden
     - rule_3.3.4
     - rhel7

#####
  - name: " 3.3.5 | HARDEN | Ensure broadcast ICMP requests are ignored "
    block:
    - name: " 3.3.5 | HARDEN | Ensure broadcast ICMP requests are ignored "
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_5
    - name: "3.3.5 | HARDEN | Ensure broadcast ICMP requests are ignored - modify "
      sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
      with_items:
          - { name: net.ipv4.icmp_echo_ignore_broadcasts, value: 1 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.5 - Setup result variable"
      set_fact:
        result_3_3_5: "{{ result_3_3_5|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.5':{'result':result_3_3_5|default({}),'audits':before_3_3_5|default({})}}) }}"
    when: rhel7cis_rule_3_3_5
    tags:
     - level1
     - harden
     - rule_3.3.5
     - rhel7

#####
  - name: " 3.3.6 | HARDEN | Ensure broadcast ICMP requests are ignored "
    block:
    - name: " 3.3.6 | HARDEN | Ensure broadcast ICMP requests are ignored "
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_6
    - name: "3.3.6 | HARDEN | Ensure broadcast ICMP requests are ignored - modify "
      sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
      with_items:
          - { name: net.ipv4.icmp_ignore_bogus_error_responses, value: 1 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.6 - Setup result variable"
      set_fact:
        result_3_3_6: "{{ result_3_3_6|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.6':{'result':result_3_3_6|default({}),'audits':before_3_3_6|default({})}}) }}"
    when: rhel7cis_rule_3_3_6
    tags:
     - level1
     - harden
     - rule_3.3.6
     - rhel7

#####
  - name: " 3.3.7 | HARDEN | Ensure Reverse Path Filtering is enabled  "
    block:
    - name: " 3.3.7 | HARDEN | Ensure Reverse Path Filtering is enabled  "
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_7
    - name: "3.3.7 | HARDEN | Ensure Reverse Path Filtering is enabled - modify "
      sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
      with_items:
          - { name: net.ipv4.conf.all.rp_filter, value: 1 }
          - { name: net.ipv4.conf.default.rp_filter, value: 1 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.7 - Setup result variable"
      set_fact:
        result_3_3_7: "{{ result_3_3_7|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.7':{'result':result_3_3_7|default({}),'audits':before_3_3_7|default({})}}) }}"
    when: rhel7cis_rule_3_3_7
    tags:
     - level1
     - harden
     - rule_3.3.7
     - rhel7

#####

  - name: " 3.3.8 | HARDEN | Ensure TCP SYN Cookies is enabled "
    block:
    - name: " 3.3.8 | HARDEN | Ensure TCP SYN Cookies is enabled "
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_8
    - name: "3.3.8 | HARDEN | Ensure TCP SYN Cookies is enabled - modify "
      sysctl:
          name: '{{ item.name }}'
          value: '{{ item.value }}'
          sysctl_set: yes
          state: present
          reload: yes
      with_items:
          - { name: net.ipv4.tcp_syncookies, value: 1 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv4.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.8 - Setup result variable"
      set_fact:
        result_3_3_8: "{{ result_3_3_8|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.8':{'result':result_3_3_8|default({}),'audits':before_3_3_8|default({})}}) }}"
    when: rhel7cis_rule_3_3_8
    tags:
     - level1
     - harden
     - rule_3.3.8
     - rhel7

#####
  - name: " 3.3.9 | HARDEN_IPv6 | Ensure IPv6 router advertisements are not accepted   "
    block:
    - name: " 3.3.9 | HARDEN_IPv6_ENABLED | Ensure IPv6 router advertisements are not accepted   "
      slurp:
        src:  /etc/sysctl.conf
      ignore_errors: yes
      register: before_3_3_9
    - name: "3.3.9 | HARDEN_IPv6_ENABLED | Ensure IPv6 router advertisements are not accepted - modify "
      sysctl:
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
          - { name: net.ipv6.conf.all.accept_ra, value: 0 }
          - { name: net.ipv6.conf.default.accept_ra, value: 0 }
      register: result_sysctl
      ignore_errors: yes
    - shell: sysctl -w net.ipv6.route.flush=1
      register: result_flush
      ignore_errors: yes
    - name: "3.3.9 - Setup result variable"
      set_fact:
        result_3_3_9: "{{ result_3_3_9|default([]) + [item] }}"
      loop:
      - "{{ result_sysctl }}"
      - "{{ result_flush }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.3.9':{'result':result_3_3_9|default({}),'audits':before_3_3_9|default({})}}) }}"
    when: rhel7cis_rule_3_1_1_ipv6_disable == false and rhel7cis_rule_3_3_9
    tags:
     - level1
     - harden
     - rule_3.3.9
     - rhel7

#####
  - name: " 3.4.1 | HARDEN |  Ensure DCCP is disabled "
    block:
    - name: " 3.4.1 | HARDEN | Ensure TCP SYN Cookies is enabled "
      slurp:
        src: /etc/modprobe.d/dccp.conf
      ignore_errors: yes
      register: before_3_4_1
    - name: " 3.4.1 | HARDEN | Ensure TCP SYN Cookies is enabled - modify/create"
      lineinfile:
        create: true
        dest: /etc/modprobe.d/dccp.conf
        regexp: dccp
        line: install dccp /bin/true
      ignore_errors: yes
      register: result_3_4_1
      diff: yes
    - set_fact:
        all_results: "{{ all_results|combine({'3.4.1':{'result':result_3_4_1|default({}),'audits':before_3_4_1|default({})}}) }}"
    when: rhel7cis_rule_3_4_1
    tags:
     - level2
     - harden
     - rule_3.4.1
     - rhel7

#####
  - name: " 3.4.2 | HARDEN |  Ensure DCCP is disabled "
    block:
    - name: " 3.4.2 | HARDEN | Ensure TCP SYN Cookies is enabled "
      slurp:
        src: /etc/modprobe.d/sctp.conf
      ignore_errors: yes
      register: before_3_4_2
    - name: " 3.4.2 | HARDEN | Ensure TCP SYN Cookies is enabled - modify/create"
      lineinfile:
        create: true
        dest: /etc/modprobe.d/sctp.conf
        regexp: sctp
        line: install sctp /bin/true
      ignore_errors: yes
      register: result_3_4_2
      diff: yes
    - set_fact:
        all_results: "{{ all_results|combine({'3.4.2':{'result':result_3_4_2|default({}),'audits':before_3_4_2|default({})}}) }}"
    when: rhel7cis_rule_3_4_2
    tags:
     - level2
     - harden
     - rule_3.4.2
     - rhel7

#####
  - name: " 3.5.1.1 | HARDEN | Ensure FirewallD is installed"
    block:
    - name: " 3.5.1.1 | HARDEN | Ensure FirewallD is installed -- before"
      package_facts:
      ignore_errors: yes
    - set_fact:
        pf: "{{ ansible_facts.packages }}"
      ignore_errors: yes
    - set_fact:
        before_fd: "{{ pf['firewalld']|default([]) }}"
        before_it: "{{ pf['iptables']|default([]) }}"
      ignore_errors: yes
    - name: " 3.5.1.1 | HARDEN | Ensure FirewallD is installed"
      package:
        name: "{{ item }}"
        state: present
      with_items:
      - firewalld
      - iptables
      register: result_3_5_1_1
      ignore_errors: yes
    - name: " 3.5.1.1 - Setup audit variable"
      set_fact:
        before_3_5_1_1: "{{ before_3_5_1_1|default([]) + [item] }}"
      loop:
        - "{{ before_fd|default([]) }}"
        - "{{ before_it|default([]) }}"
    - set_fact:
        all_results: "{{ all_results|combine({'3.5.1.1':{'result':result_3_5_1_1|default({}),'audits':before_3_5_1_1|default({})}}) }}"
    when: rhel7cis_rule_3_5_1_1
    tags:
     - level1
     - harden
     - rule_3.5.1.1
     - rhel7

#####
  - name: " 3.5.1.2 | HARDEN | Ensure iptables-services package is not installed "
    block:
      - name: " 3.5.1.2 | HARDEN | Ensure iptables-services package is not installed - before"
        service_facts:
        ignore_errors: yes
      - set_fact:
          sf: "{{ ansible_facts.services }}"
        ignore_errors: yes
      - set_fact:
          before_v1: "{{ sf['iptables.service']|default({'state': 'none', 'status': 'none'}) }}"
          before_v2: "{{ sf['ip6tables.service']|default({'state': 'none', 'status': 'none'}) }}"
        ignore_errors: yes
      - name: " 3.5.1.2 | HARDEN | Ensure iptables-services package is not installed - before"
        package_facts:
        ignore_errors: yes
      - set_fact:
          pf: "{{ ansible_facts.packages }}"
        ignore_errors: yes
      - set_fact:
          before_pkg: "{{ pf['iptables-services']|default({'results': 'none'}) }}"
        ignore_errors: yes
      - name: " 3.5.1.2 | HARDEN | Ensure iptables-services package is not installed "
        systemd:
          name: "{{ item }}"
          state: stopped
          enabled: no
        with_items:
          - ip6tables
          - iptables
        register: result_iptbl_stop
        ignore_errors: yes
      - package:
          name: iptables-services
          state: absent
        register: result_uninstall
        ignore_errors: yes
      - name: "3.5.1.2 - Setup audit variable"
        set_fact:
          before_3_5_1_2: "{{ before_3_5_1_2|default([]) + [item] }}"
        loop:
          - "{{ before_v1 }}"
          - "{{ before_v2 }}"
          - "{{ before_pkg }}"
        ignore_errors: true
      - name: "3.5.1.2 - Setup result variable"
        set_fact:
          result_3_5_1_2: "{{ result_3_5_1_2|default([]) + [item] }}"
        loop:
          - "{{ result_iptbl_stop }}"
          - "{{ result_uninstall }}"
      - set_fact:
          all_results: "{{ all_results|combine({'3.5.1.2':{'result':result_3_5_1_2|default({}),'audits':before_3_5_1_2|default({})}}) }}"
    when: rhel7cis_rule_3_5_1_2
    tags:
     - level1
     - harden
     - rule_3.5.1.2
     - rhel7

#####
  - name: " 3.5.1.3 | HARDEN | Ensure nftables is not installed or stopped and masked"
    block:
      - name: " 3.5.1.3 | HARDEN | Ensure firewalld service is enabled and running - before"
        service_facts:
        ignore_errors: yes
      - set_fact:
          sf: "{{ ansible_facts.services }}"
        ignore_errors: yes
      - set_fact:
          before_3_5_1_3: "{{ sf['nftables.service']|default({'state': 'none', 'status': 'none'}) }}"
        ignore_errors: yes
      - name: " 3.5.1.3 | HARDEN | Ensure nftables is not installed or stopped and masked"
        systemd:
          name: "nftables"
          state: stopped
          masked: yes
        register: result_3_5_1_3
        ignore_errors: yes
      - set_fact:
          all_results: "{{ all_results|combine({'3.5.1.3':{'result':result_3_5_1_3|default({}),'audits':before_3_5_1_3|default({})}}) }}"
    when: rhel7cis_rule_3_5_1_3
    tags:
     - level1
     - harden
     - rule_3.5.1.3
     - rhel7

#####
  - name: " 3.5.1.4 | HARDEN | Ensure firewalld service is enabled and running"
    block:
      - name: " 3.5.1.4 | HARDEN | Ensure firewalld service is enabled and running - before"
        service_facts:
        ignore_errors: yes
      - set_fact:
          sf: "{{ ansible_facts.services }}"
        ignore_errors: yes
      - set_fact:
          before_3_5_1_4: "{{ sf['firewalld.service']|default({'state': 'none', 'status': 'none'}) }}"
        ignore_errors: yes
      - name: " 3.5.1.4 | HARDEN | Ensure firewalld service is enabled and running"
        systemd:
          name: "firewalld"
          state: started
          masked: no
          enabled: yes
        register: result_3_5_1_4
        ignore_errors: yes
      - set_fact:
          all_results: "{{ all_results|combine({'3.5.1.4':{'result':result_3_5_1_4|default({}),'audits':before_3_5_1_4|default({})}}) }}"
    when: rhel7cis_rule_3_5_1_4
    tags:
     - level1
     - harden
     - rule_3.5.1.4
     - rhel7

#####
  - name: " 3.5.1.5 | HARDEN | Ensure default zone is set "
    block:
      - name: " 3.5.1.5 | HARDEN | Ensure default zone is set -- before "
        firewalld:
          zone: "{{ default_zone }}"
          state: present
          permanent: yes
        register: before_3_5_1_5
        diff: yes
        check_mode: yes
        ignore_errors: yes
      - name: " 3.5.1.5 | HARDEN | Ensure default zone is set"
        firewalld:
          zone: "{{ default_zone }}"
          state: present
          permanent: yes
        register: result_3_5_1_5
        diff: yes
        ignore_errors: yes
      - set_fact:
          all_results: "{{ all_results|combine({'3.5.1.5':{'result_3_5_1_5':result|default({}),'audits':before_3_5_1_5|default({})}}) }}"
    when: rhel7cis_rule_3_5_1_5
    tags:
     - level1
     - harden
     - rule_3.5.1.5
     - rhel7


#  - name: " 3.5.1.6 | HARDEN |  Ensure network interfaces are assigned to appropriate zone "
#    block:
#    - name: " 3.5.1.6 | HARDEN |  Ensure network interfaces are assigned to appropriate zone "
#      shell:  " nmcli -t connection show | awk -F: '{if($4){print $4}}' | while read INT; do firewall-cmd --get-active-zones | grep -B1 $INT; done "
#      register: rhel7cis_rule_3_5_1_6_rc
#      ignore_errors: yes
#
#
#    - name: " 3.5.1.6 | MANUAL_CHECK | Ensure network interfaces are assigned to appropriate zone "
#      block:
#      - name: " 3.5.1.6 | MANUAL_CHECK | Ensure network interfaces are assigned to appropriate zone "
#        debug:
#          var: rhel7cis_rule_3_5_1_6_rc.stdout_lines
#          msg:
#          - "Please review if the following interface(s) listed are required on the system: {{ rhel7cis_rule_3_5_1_6_rc.stdout_lines | list }}. "
#          - "Please  verify that the interface(s) follow site policy for zone assignment."
#          - "Once verified, please set rhel7cis_rule_3_5_1_6 to true in default/main.yml ."
#        register: rhel7cis_rule_3_5_1_6_interface_list
#      - set_fact:
#          rhel7cis_rule_3_5_1_6_result: false
#      when: rhel7cis_rule_3_5_1_6_rc.rc == 0
#    - set_fact:
#        all_results: "{{ all_results|combine({'3.5.1.6':rhel7cis_rule_3_5_1_6_result|default(true)}) }}"
#    when: rhel7cis_rule_3_5_1_6
#    tags:
#     - level1
#     - harden
#     - rule_3.5.1.6
#     - rhel7

#  - name: " 3.5.1.7 | HARDEN | Ensure unnecessary services and ports are not accepted "
#    block:
#    - name: " 3.5.1.7 | HARDEN | Ensure unnecessary services and ports are not accepted "
#      shell:  " firewall-cmd --get-active-zones | awk '!/:/ {print $1}' | while read ZN; do firewall-cmd --list-all --zone=$ZN; done "
#      register: rhel7cis_rule_3_5_1_7_rc
#      ignore_errors: yes


#    - name: " 3.5.1.7 | MANUAL_CHECK | Ensure unnecessary services and ports are not accepted "
#      block:
#      - name: " 3.5.1.7 | MANUAL_CHECK | Ensure unnecessary services and ports are not accepted "
#        debug:
#          var: rhel7cis_rule_3_5_1_7_rc.stdout_lines
#          msg:
#          - "Please review if the following services and ports listed are required on the system: {{ rhel7cis_rule_3_5_1_7_rc.stdout_lines | list }}. "
#          - "Please  verify that the services and ports follow site policy."
#          - "Once verified, please set rhel7cis_rule_3_5_1_7 to true in default/main.yml ."
#        register: rhel7cis_rule_3_5_1_7_svcport_list
#      - set_fact:
#          rhel7cis_rule_3_5_1_7_result: false
#      when: rhel7cis_rule_3_5_1_7_rc.rc == 0
#    - set_fact:
#        all_results: "{{ all_results|combine({'3.5.1.7':rhel7cis_rule_3_5_1_7_result|default(true)}) }}"
#    when: rhel7cis_rule_3_5_1_7
#    tags:
#     - level1
#     - harden
#     - rule_3.5.1.7
#     - rhel7
